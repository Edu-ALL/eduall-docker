user  nginx;  
worker_processes  auto;  # Automatically adjust based on the number of CPU cores.
worker_connections  8192;  # Allow each worker to handle more connections.

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log crit;  # Only log critical errors to reduce disk I/O overhead.

# Efficient event handling and scalable configuration
events {
    worker_connections  8192;  # Allow each worker to handle more connections.
    multi_accept on;           # Accept multiple connections at once for better performance.
    use epoll;                 # epoll is the best option for Linux-based systems (Linux 2.6+).
}

http {
    # MIME types and defaults
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Optimized log format to minimize I/O overhead
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    # File handling optimizations
    sendfile        on;  # Allow high-performance file transfers.
    tcp_nopush      on;  # Send data in larger chunks to reduce overhead.
    tcp_nodelay     on;  # Disable Nagle algorithm for lower latency in small packets.
    aio              on;  # Use asynchronous I/O for serving static files.
    directio         4m;  # Use direct I/O for large files, bypassing the system cache.

    # Memory optimizations
    # Increase buffer sizes for better memory handling in high-traffic scenarios.
    client_body_buffer_size 512k;   # Large buffer for request bodies.
    client_max_body_size 50M;       # Increase max body size to support large uploads.
    client_header_buffer_size 4k;   # Larger buffer for headers.
    large_client_header_buffers 4 8k;  # Allow larger headers.

    # Connection and keep-alive settings
    keepalive_timeout  75;          # Longer keepalive for persistent connections.
    send_timeout 30;               # Time to wait for a response from client.
    
    # Enable caching (for performance enhancement, especially for static files)
    expires 30d;                   # Cache static content for 30 days.
    add_header Cache-Control "public, max-age=2592000";  # Cache control header.

    # Enable Gzip Compression (highly effective for reducing bandwidth and improving speed)
    gzip  on;
    gzip_types text/plain application/javascript text/css application/xml text/javascript application/json application/xml+rss;
    gzip_proxied any;                # Enable gzip for proxied requests.
    gzip_min_length 1024;            # Only compress responses larger than 1 KB.

    # Maximize memory usage for DNS resolution
    resolver 8.8.8.8 8.8.4.4 valid=300s;  # Use Google's public DNS servers.
    resolver_timeout 10s;               # Timeout for DNS lookups.

    # Performance tuning for HTTP headers and caching
    types_hash_max_size 2048;      # Increase size of hash for file type lookups.
    types_hash_bucket_size 64;     # Increased bucket size for better hashing.
    # Enable HTTP/2 (faster performance over HTTPS)
    http2 on;

    # Include external configuration files
    include /etc/nginx/conf.d/*.conf;
}
